// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    
    /* Select the RAM in address (12 to 13 is the address of the RAM4K) */
    DMux4Way(in = load, sel = address[12..13], a = loadRAM0, b = loadRAM1, c = loadRAM2, d = loadRAM3);
    
    /* Load the RAM in address (0 to 11 is the address of the RAM in 
    RAM4K) */
    RAM4K(in = in, load = loadRAM0, address = address[0..11], out = outRAM0);
    RAM4K(in = in, load = loadRAM1, address = address[0..11], out = outRAM1);
    RAM4K(in = in, load = loadRAM2, address = address[0..11], out = outRAM2);
    RAM4K(in = in, load = loadRAM3, address = address[0..11], out = outRAM3);

    /* Select the output of the RAM in address (12 to 13 is the address of 
    the RAM4K) */
    Mux4Way16(a = outRAM0, b = outRAM1, c = outRAM2, d = outRAM3, sel = address[12..13], out = out);
}